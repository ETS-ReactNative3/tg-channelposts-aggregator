kind: pipeline
type: docker
name: Re-deploy Swarm Stack

# After you push the changes to the GitHub repository, the preconfigured automated build process is started in the Docker Hub. When the container are successfully built from the chosen Dockerfiles, the pipeline can then proceed with the next deployment step. In that step the new versions of the containers are being pulled from the Docker Registry and re-deployed in the swarm stack.
# Any pipeline step can be triggered on the so-called 'custom' event coming from the docker hub using it's outgoing webhook (or from any other CI tool or container registry, such as GitHub registry or similar: https://github.com/features/packages):
# http://IP_OR_DNS:PORT/api/repos/<github-user>/<github-repo>/builds?branch=<branch-name>&access_token=<32-characters-long-hash>
# The personal bearer auth token can be found in your Drone account: http://IP_OR_DNS:PORT/account
# There are more pipeline parameters and other details on this page: https://docs.drone.io/api/builds/build_create/
# Finally, set up that url in the docker hub webhook's tab in the repository that's being built last of all: https://hub.docker.com/repository/docker/<organization/repo-name>/webhooks

# Deployments can also be triggered using GitHub's actions and/or plugins:
# https://probot.github.io/docs/deployment/
# https://developer.github.com/webhooks/#events
# https://developer.github.com/v3/repos/deployments/

steps:
  # ssh into the machine and deploy the pulled docker containers.
  - name: deploy
    # http://plugins.drone.io/appleboy/drone-ssh/
    image: appleboy/drone-ssh
    when:
      event:
        - custom
        # - promote
        # - cron
        # - push
        # - pull_request
        # - tag
        # - rollback
      # branch:
      #   - dockerized
      # target:
      #   - production
      # https://docs.drone.io/pipeline/docker/syntax/conditions/#by-status
      # https://docs.drone.io/promote/
    # global environment variables accessible in the scope of the current step:
    environment:
      FILE_PATH:
        from_secret: file_path
      FILE_NAME:
        from_secret: file_name
      STACK_NAME:
        from_secret: stack_name
    # https://github.com/appleboy/drone-ssh/issues/130
    # internal plugin-related environment variables:
    settings:
      host:
        from_secret: ssh_host
      username:
        from_secret: ssh_username
      password:
        from_secret: ssh_password
      # key:
      #   from_secret: ssh_key
      # passphrase: 1234
      port: 22
      envs: [FILE_PATH, FILE_NAME, STACK_NAME]
      script:
        - echo "The deployment has been started."
        - echo "Docker Compose file path is:"
        - echo $FILE_PATH/$FILE_NAME
        - echo "The name of the stack file:"
        - echo $STACK_NAME
        # - docker stop my-service
        # - docker pull company/project:${DRONE_COMMIT}
        # - docker run -d company/project:${DRONE_COMMIT} my-service
        # - docker stack rm $STACK_NAME # if you need to shut down the stack first
        - docker stack deploy -c $FILE_PATH/$FILE_NAME $STACK_NAME
  # https://discourse.drone.io/t/triggering-promotion-event/6634/7

  # Notify the pre-configured Telegram BOT about the deployment status and github commit
  - name: telgram_notify
    image: appleboy/drone-telegram
    when:
      status:
        - success
        - failure
    settings:
      # The secrets below can be entered in the Drone UI > repo > settings
      token:
        from_secret: telegram_token
      to:
        from_secret: telegram_chat_id
      format: html
      message: >
        {{#success build.status}}
        Build finished for {{tpl.app}} — {{tpl.env}}.<br /><br />
        ✅ Build #{{build.number}} of `{{repo.name}}` on `{{build.event}}` succeeded.<br /><br />
        Repository: {{repo.namespace}}<br />
        Commit Ref: {{commit.ref}}<br />
        Event path on GitHub: {{github.event.path}}<br /><br />
        📝 Commit by {{commit.author}} on branch <i>{{commit.branch}}</i>:<br />
        <pre>{{commit.message}}</pre>
        <br />
        🌐 <a href='{{ commit.link }}'>Commit link</a>.<br />
        🌐 <a href='{{ build.link }}'>Build link</a>.<br />
        {{else}}
        ❌ Build #{{build.number}} of `{{repo.name}}` failed.<br />
        📝 Commit by {{commit.author}} on branch <i>{{commit.branch}}</i>:<br />
        <pre>{{commit.message}}</pre>
        🌐 <a href='{{ commit.link }}'>Commit link</a>.<br />
        🌐 <a href='{{ build.link }}'>Build link</a>.<br />
        {{/success}}

# https://docs.drone.io/pipeline/triggers/#by-event
trigger:
  event:
    exclude: [push, tag]
    # [ pull_request, promote, rollback, custom ]
# ---
#   kind: secret
#   name: foo
#   data: EUgsPFbn0xyNdsxKtbB6nwR2w7RdG1pzo299qmI4zQ==
# https://gist.github.com/phildionne/790d90a390c7d345bba71c20f56c0026
