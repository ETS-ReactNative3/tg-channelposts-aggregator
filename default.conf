# user nginx;
# worker_processes  1;

# error_log /var/log/nginx/error.log warn;

    # upstream search {
    #     server 127.0.0.1:9243;
    # }

    # upstream search {
    #     server 127.0.0.1:9243;
    # }

    # the default server DNS/IP is being dynamically set by nginx-proxy

    # configurations for the upstream from above
    server {
        # server_name aggregator.app;
        listen 80 default_server;
        listen [::]:80 default_server ipv6only=on;
        # server_name api.domain.com; # backend virtual server
        
        # listen 443 ssl;
        # listen [::]:443 ssl;
        # server_name <HShostname>;
    
        # ssl_certificate /etc/letsencrypt/live/<HShostname>/fullchain.pem;
        # ssl_certificate_key /etc/letsencrypt/live/<HShostname>/privkey.pem;
        # include ssl.conf;

        location / {
            try_files $uri $uri/ @frontend_app;
        }

        location @frontend_app {
            proxy_pass_request_headers  on;
            proxy_redirect              off;
            proxy_set_header            Host $host;
            proxy_set_header            Connection keep-alive;
            proxy_set_header            X-Real-IP $remote_addr;
            proxy_set_header            X-Forwarded-Proto $scheme;
            proxy_set_header            X-Forwarded-For $remote_addr;
            proxy_ssl_session_reuse     off;

            # proxy_http_version      1.1;
            # proxy_buffering         off;
            # proxy_set_header        Host $http_host;
            # proxy_set_header        Upgrade $http_upgrade;
            # proxy_set_header        Connection $proxy_connection;
            # proxy_set_header        X-Real-IP $remote_addr;
            # proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header        X-Forwarded-Proto $proxy_x_forwarded_proto;
            # proxy_set_header        X-Forwarded-Ssl $proxy_x_forwarded_ssl;
            # proxy_set_header        X-Forwarded-Port $proxy_x_forwarded_port;

            # proxy_set_header        Upgrade $http_upgrade;
            # proxy_set_header        Connection "upgrade";
            # proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_buffer_size       128k;
            # proxy_buffers           4 256k;
            # proxy_busy_buffers_size 256k;
            proxy_pass http://frontend:3000;
        }

        # location /api {
        #     rewrite ^([^.\?]*[^/])$ $1/ break;
        #     proxy_pass http://api:80;
        # }

        location /api/v1/posts {
            proxy_pass http://backend:8080;
        }
        location /api/v1/posts/count {
            proxy_pass http://backend:8080;
        }
        # location /api/v1/search {
        #     proxy_pass http://search:9243;
        # }

        # location /site1/ {
        #     proxy_pass  http://site1/;
        #     proxy_set_header Host site1.mysite.com;
        #     server site1.mysite.com:80;
        # }

        # location /api {
        #     rewrite /(.*) /$1 break;
        #     proxy_pass http://backend;
        # }
    }

    # a server block for each app or service that's behind another (sub-)domain
    # server {
    #   listen 80;
    #   server_name kibana-analytics.domain.com;
    #   location / {
    #     proxy_pass http://kibana:5601/;
    #   }
    # }

    # server {
    #     listen 9200;
    #     add_header X-Frame-Options "SAMEORIGIN";
    #     location / {
    #         proxy_pass http://elasticsearch:9200;
    #         proxy_http_version 1.1;
    #         proxy_set_header Connection keep-alive;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    # }

# a config common to all virtual hosts: /etc/nginx/nginx.conf
# a config with more specific logic: /etc/nginx/conf.d/frontend.conf