# configuration example: https://docs.traefik.io/v2.0/reference/static-configuration/file/
[global]
  sendAnonymousUsage = false

[log]
  level = "DEBUG" # ERROR|INFO
  filePath = "/logs/traefik.log" # see 'traefik: volumes:' section in the compose file
  format = "json"
  # https://docs.traefik.io/observability/access-logs/

[serversTransport]
  insecureSkipVerify = true
  # https://docs.traefik.io/user-guides/grpc/#with-https

[providers]
  [providers.file]
    directory = "/etc/traefik/config/dynamic"
    filename = "traefik.dynamic.toml"
    watch = true
    # https://github.com/containous/traefik/issues/4924
    # https://github.com/containous/traefik/issues/5618
  [providers.docker]
    exposedByDefault = true
    swarmMode = true
    useBindPortIP = true
    # endpoint = "tcp://127.0.0.1:2377"
    # if it doesn't work, try ':2375'
    network = "traefik_proxy"
    watch = true
    # watch for new (or no longer available) containers
    endpoint = "unix:///var/run/docker.sock"
    # docker swarm mode (1.12+): https://docs.traefik.io/routing/providers/docker/

[api]
  dashboard = true
  insecure = true
  # https://docs.traefik.io/operations/dashboard/#insecure-mode

# https://docs.traefik.io/routing/entrypoints/#configuration
[entryPoints]
  [entryPoints.web]
    address = ":80"
  [entryPoints.backend]
    address = ":8080"
  [entryPoints.drone-server]
    address = ":8090"
  [entryPoints.drone-agent]
    address = ":3002"
  [entryPoints.traefik]
    address = ":9009"
    # https://docs.traefik.io/v2.1/operations/api/#insecure
    # If the entryPoint named traefik is not configured, it will be automatically created on port 8080.
  [entryPoints.dashboard_entry]
    address = ":9010"
  [entryPoints.web-secure]
    address = ":443"

[certificatesResolvers]
  [certificatesResolvers.my-resolver.acme]
    # email to notify you in case of issues or expiring certificates
    email = "your-email@your-domain.org"
    storage = "/etc/traefik/acme/acme.json"
    caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"
    # https://docs.traefik.io/v2.1/user-guides/docker-compose/acme-dns/
    # https://docs.traefik.io/https/acme/#caserver
    # [certificatesResolvers.my-resolver.acme.httpChallenge]
    #   entryPoint = "web" # used during the challenge
    [certificatesResolvers.my-resolver.acme.dnsChallenge]
      # dnsChallenge is to generate wildcard certificates using ACME V2
      provider = "godaddy"
      delayBeforeCheck = 0

# [certificatesResolvers]
#   [certificatesResolvers.default.acme]
#     email = "contact@myemail.com"
#     storage = "acme.json"
#     [certificatesResolvers.default.acme.tlsChallenge]

# TODO: don't forget to do:
# cd config/acme
# chmod 600 acme.json

# https://docs.traefik.io/https/acme/
# https://docs.traefik.io/migration/v1-to-v2/