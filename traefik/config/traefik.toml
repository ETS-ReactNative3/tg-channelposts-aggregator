[global]
  sendAnonymousUsage = false

[log]
  level = "DEBUG" # ERROR|INFO
  filePath = "/logs/traefik.log" # see 'traefik: volumes:' section in the compose file
  # format = "json"
  # https://docs.traefik.io/observability/access-logs/

[providers.docker]
  exposedByDefault = false
  swarmMode = true
  endpoint = "tcp://127.0.0.1:2377"
  # if it doesn't work, try ':2375'
  network = "traefik_proxy"
  watch = true
  # watch for new (or no longer available) containers
  # endpoint = "unix:///var/run/docker.sock"
  # docker swarm mode (1.12+): https://docs.traefik.io/routing/providers/docker/

[api]
  dashboard = true
  insecure = true
  # https://docs.traefik.io/operations/dashboard/#insecure-mode

# https://docs.traefik.io/routing/entrypoints/#configuration
[entryPoints]
  [entryPoints.web]
    address = ":80"
  [entryPoints.backend]
    address = ":8080"
  [entryPoints.drone_entry]
    address = ":8088"
  [entryPoints.dashboard]
    address = ":9009"
  [entryPoints.web-secure]
    address = ":443"
    [certificatesResolvers.mycert.acme]
      # email to notify you in case of issues or expiring certificates
      email = "your-email@your-domain.org"
      storage = "/etc/traefik/acme/acme.json"
      caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"
      # https://docs.traefik.io/https/acme/#caserver
      # [certificatesResolvers.mycert.acme.httpChallenge]
      #   entryPoint = "web" # used during the challenge
      [certificatesResolvers.mycert.acme.dnsChallenge]
        # dnsChallenge is to generate wildcard certificates using ACME V2
        provider = "godaddy"
        delayBeforeCheck = 0

# TODO: don't forget to do:
# cd config/acme
# chmod 600 acme.json

# https://docs.traefik.io/https/acme/
# https://docs.traefik.io/migration/v1-to-v2/